roboname := "TheMachine"

container rage {bool yes := true}

func num, num getM(){
	return 2,3
}

container simon{
	num victor := 1
 	num emil[3], boolean damn := arrayAndBool()
 	rage mad
 	num hej[5]
 	rage alsoMad[5]
 	num b, num a := getM()
}

robot initialization(){
	num turnDirection := 1
	bool moving := false
	num remainingDistance := 0
	simon dude[2]
	simon otherDude[] := dude
	num testingTwoArrays[8]
	num haha := turnDirection / 0
	num hahahaha := Math.sqrt(4)
	dude[1].victor := 2
	dude[0].mad.yes := false
	dude[1].emil[0] := 2
	
	setBodyColor(Color.gray())
	setGunColor(Color.lightGray())
	setRadarColor(Color.red())
	setBulletColor(Color.black())
}

func num[], bool arrayAndBool() {
	turnDirection :=2
	num out[3]
	out[0] := 1
	out[1] := 2
	out[2] := 3
	return out, true
}

func num, num, num test3(){
	return 2,4,6
}

func num[] test4(){
	return dude[1].emil
}

func num, simon,bool test2(){
	bool epic := false
	num janus[], epic := arrayAndBool()
	num extraJanus[], boolean evenMoreEpic := arrayAndBool()
	num hej := 0
	num hej2 := 0
	num hej3 := 0
	num he22[3] := test4()
	hej, hej2, hej3 +:= test3()
	return 2, dude[0],true
}

func simon getTheSimon(){
	num hej, simon s, bool yes := test2()
	hej := 2
	return dude[1]
}

func num, text, bool test(num yea){
	simon Simon := getTheSimon()
	return 2*yea,"hej", true
}

func num doStuff(){
	num hej := 0
	text t := ""
	bool f := false
	hej,t,f := test(7)
	num jaeh, num yunus, num helmut := test3()
	num heee, text lol, bool yep := test(2)
	return (dude[1].victor + 1)/5
}


func num, bool, text test(num i){
	return 2+5+i, true, "test"
}

robot behavior(){
	num supertest[4]
	num n, bool b, text t := test(2)
	Output.printLine("running")
	if (moving){
		if (remainingDistance > 0){
			ahead(remainingDistance)
			moving := false
		}else{
			remainingDistance -:= 20
			ahead(20)
			scan()
		}
	}else{
		turnGunRight(1440 * turnDirection)
	}
}

event onScannedRobot(ScannedRobotEvent e){
	if (moving){
		CleverFire(e.getDistance())
	}else{
		moving := true
		if (e.getHeading() - getHeading() >=0){
			turnDirection := 1
		}else{
			turnDirection := -1
		}

		num difference := getGunHeading() - getHeading()
		if (difference > 180){
			turnGunRight(360 - difference)
		}else{
			turnGunLeft(difference)
		}
		
		turnRight(e.getBearing())
		remainingDistance := e.getDistance() + 5
		if (remainingDistance > 200){
			remainingDistance := 200
		}
		scan()
	}
}


func void CleverFire(num distance){
	if (distance < 50){
		fire(3)
	}else if (distance < 100){
		fire(2)
	}else if (distance < 200){
		fire(1)
	}
}


event IHit(HitRobotEvent e){

}

event onHitRobot(HitRobotEvent e){
	if (e.getBearing() >= 0){
		turnDirection := 1
	}else{
		turnDirection := -1
	}
	turnRight(e.getBearing())
	
	fire(3)
	
	//turnRight(e.getBearing()) := 2
	// Determine a shot that won't kill the robot...
	// We want to ram him instead for bonus points
	if (e.getEnergy() > 16){
		fire(3)
	}else if (e.getEnergy() > 10){
		fire(2)
	}else if (e.getEnergy() > 4){
		fire(1)
	}else if (e.getEnergy() > 2){
		fire(0.5)
	}else if (e.getEnergy() > 0.4){
		fire(0.1)
	}
	ahead(40) // Ram him again!
}